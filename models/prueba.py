from datetime import datetime
from sqlalchemy.sql.expression import and_
from config import db, ma
from marshmallow import Schema, fields, validate
from .policy import Policy, PolicySchema
from common.util import Util
from models.book_hotel import BookHotel

class PruebaBookingSchema(ma.Schema):
    idbook_hotel = fields.Integer(dump_only = True)
    code_reservation = fields.String(required = True, validate = validate.Length(max = 60))
    iddef_property = fields.Integer()
    short_name = fields.String(required = True, validate = validate.Length(max = 45))
    trade_name = fields.String(required = True, validate = validate.Length(max = 45))
    property_code = fields.String(required = True, validate = validate.Length(max = 6))
    from_date = fields.DateTime("%Y-%m-%d %H:%M:%S")
    to_date = fields.DateTime("%Y-%m-%d %H:%M:%S")
    nights = fields.Integer()
    adults = fields.Integer()
    iddef_market_segment = fields.Integer()
    currency_code = fields.String(required = True, validate = validate.Length(max = 15))
    description = fields.String(required = True, validate = validate.Length(max = 100))
    iddef_country = fields.Integer()
    name = fields.String(required = True, validate = validate.Length(max = 45))
    country_code =  fields.String(required = True, validate = validate.Length(max = 45))
    iddef_channel = fields.Integer()
    name = fields.String(required = True, validate = validate.Length(max = 150))
    iddef_currency = fields.Integer()
    currency_code = fields.String(required = True, validate = validate.Length(max = 15))
    descripton = fields.String(required = True, validate = validate.Length(max = 60 ))
    iddef_language = fields.Integer()
    lang_code = fields.String(required = True, validate = validate.Length(max = 10))
    description = fields.String(required = True, validate = validate.Length(max = 60))
    exchange_rate = fields.Float()
    promo_amount = fields.Float()
    discount_percent = fields.Float()
    discount_amount = fields.Float()
    total_gross = fields.Float()
    fee_amount = fields.Float()
    country_fee = fields.Float()
    amount_pending_payment = fields.Float()
    amount_paid = fields.Float()
    total = fields.Float()
    promotion_amount = fields.Float()
    last_refund_amount = fields.Float()
    idbook_status = fields.Integer()
    name = fields.String(required = True, valdiate = validate.Length(max = 50))
    code = fields.String(required = True, validate = validate.Length(max = 50))
    description = fields.String(required = True, valdiate = validate.Length(max = 100))
    device_request = fields.String(required = True, validate = validate.Length(max = 50))
    expiry_date = fields.DateTime("%Y-%m-%d %H:%M:%S")
    cancelation_date = fields.DateTime("%Y-%m-%d %H:%M:%S")
    modification_date_booking = fields.DateTime("%Y-%m-%d %H:%M:%S")
    estado = fields.Integer()
    usuario_creacion = fields.String(required = True, validate = validate.Length(max = 45))
    fecha_creacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
    usuario_ultima_modificacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
    fecha_ultima_modificacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
