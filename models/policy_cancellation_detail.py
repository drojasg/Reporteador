from config import db, ma
from marshmallow import Schema, fields, validate
from models.policy_cancellation_option import PolicyCancellationOption, PolicyCancellationOptionSchema
from models.policy_cancellation_penalty import PolicyCancellationPenalty, PolicyCancellationPenaltySchema
from datetime import datetime
from common.util import Util

class PolicyCancellationDetail(db.Model):
    __tablename__ = "def_policy_cancellation_detail"

    iddef_policy_cancellation_detail = db.Column(db.Integer, primary_key=True)
    iddef_policy = db.Column(db.Integer, db.ForeignKey("def_policy.iddef_policy"), nullable=False)
    id_type_detail = db.Column(db.Integer, nullable=False, default=2)
    is_base = db.Column(db.Integer, nullable=False, default=1)
    is_refundable = db.Column(db.Integer, nullable=False, default=0)
    start_date = db.Column(db.Date, nullable=False, default="1900-01-01")
    end_date = db.Column(db.Date, nullable=False, default="1900-01-01")
    iddef_cancellation_window = db.Column(db.Integer, db.ForeignKey("def_policy_cancellation_option.iddef_policy_cancellation_option"), nullable=False)
    cancellation_window = db.relationship('PolicyCancellationOption', backref=db.backref('def_policy_cancellation_detail', lazy=True))
    iddef_inside_penalty = db.Column(db.Integer, db.ForeignKey("def_policy_cancellation_penalty.iddef_policy_cancellation_penalty"), nullable=False)
    inside_penalty = db.relationship('PolicyCancellationPenalty', backref=db.backref('def_policy_cancellation_detail', lazy=True))
    amount_inside_penalty = db.Column(db.Float, nullable=False, default=0)
    description_en = db.Column(db.Text(), nullable=False)
    description_es = db.Column(db.Text(), nullable=False)
    #policy = db.relationship('Policy', backref="policy_cancellation", lazy="joined")
    estado = db.Column(db.Integer,nullable=False)
    usuario_creacion = db.Column(db.String(45), nullable=False)
    fecha_creacion = db.Column(db.DateTime, default=datetime.utcnow)
    usuario_ultima_modificacion = db.Column(db.String(45), default="")
    fecha_ultima_modificacion = db.Column(db.DateTime, default="1900-01-01 00:00:00", onupdate=datetime.utcnow)

class PolicyCancellationDetailSchema(ma.Schema):
    iddef_policy_cancellation_detail = fields.Integer()
    iddef_policy = fields.Integer(required=True)
    id_type_detail = fields.Integer(required=True)
    is_base = fields.Integer(required=True)
    is_refundable = fields.Integer(required=True)
    start_date = fields.DateTime("%Y-%m-%d")
    end_date = fields.DateTime("%Y-%m-%d")
    iddef_cancellation_window = fields.Integer(required=True)
    cancellation_window = fields.Nested(PolicyCancellationOptionSchema, exclude=Util.get_default_excludes())
    iddef_inside_penalty = fields.Integer(required=True)
    inside_penalty = fields.Nested(PolicyCancellationPenaltySchema, exclude=Util.get_default_excludes())
    amount_inside_penalty = fields.Float()
    description_en = fields.String(required=True)
    description_es = fields.String(required=True)
    estado = fields.Integer()
    usuario_creacion = fields.String(validate=validate.Length(max=45))
    fecha_creacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
    usuario_ultima_modificacion = fields.String(validate=validate.Length(max=45))
    fecha_ultima_modificacion = fields.DateTime("%Y-%m-%d %H:%M:%S")

class PostPolicyCancellationDetailSchema(ma.Schema):
    iddef_policy_cancellation_detail = fields.Integer()
    iddef_policy = fields.Integer(required=True)
    id_type_detail = fields.Integer(required=True)
    is_base = fields.Integer()
    is_refundable = fields.Integer()
    start_date = fields.Date()
    end_date = fields.Date()
    iddef_cancellation_window = fields.Integer()
    iddef_inside_penalty = fields.Integer()
    amount_inside_penalty = fields.Float()
    description_en = fields.String(required=True)
    description_es = fields.String(required=True)
    estado = fields.Integer()
    usuario_creacion = fields.String(validate=validate.Length(max=45))
    fecha_creacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
    usuario_ultima_modificacion = fields.String(validate=validate.Length(max=45))
    fecha_ultima_modificacion = fields.DateTime("%Y-%m-%d %H:%M:%S")

class GetPolicyCancellationDetailSchema(ma.Schema):
    iddef_policy_cancellation_detail = fields.Integer()
    iddef_policy = fields.Integer()
    id_type_detail = fields.Integer()
    is_base = fields.Integer()
    is_refundable = fields.Integer()
    start_date = fields.DateTime("%Y-%m-%d")
    end_date = fields.DateTime("%Y-%m-%d")
    iddef_cancellation_window = fields.Integer()
    cancellation_window = ma.Pluck("PolicyCancellationOptionSchema", 'text')
    iddef_inside_penalty = fields.Integer()
    inside_penalty = ma.Pluck("PolicyCancellationPenaltySchema", 'text')
    amount_inside_penalty = fields.Float()
    description_en = fields.String()
    description_es = fields.String()
    estado = fields.Integer()
    usuario_creacion = fields.String(validate=validate.Length(max=45))
    fecha_creacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
    usuario_ultima_modificacion = fields.String(validate=validate.Length(max=45))
    fecha_ultima_modificacion = fields.DateTime("%Y-%m-%d %H:%M:%S")