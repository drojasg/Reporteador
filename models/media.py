from datetime import datetime
from config import db, ma
from marshmallow import Schema, fields, validate
from models.media_type import MediaType
#from models.media_group import MediaGroup

class Media(db.Model):
    __tablename__="def_media"
    __table_args__ = {'extend_existing': True} 
    iddef_media = db.Column(db.Integer,primary_key=True)
    iddef_media_type = db.Column(db.Integer,db.ForeignKey("def_media_type.iddef_media_type"), nullable=False)
    media_type = db.relationship('MediaType', backref=db.backref('def_media', lazy='joined'))
    iddef_media_group = db.Column(db.Integer,db.ForeignKey("def_media_group.iddef_media_group"), nullable=False)
    #media_group = db.relationship('MediaGroup', backref=db.backref('def_media', lazy='joined'))
    url = db.Column(db.String(500))
    name = db.Column(db.String(250))
    description = db.Column(db.String(250))
    nombre_bucket = db.Column(db.String(45))
    bucket_type = db.Column(db.Integer, default= 1, nullable = False)
    etag = db.Column(db.String(255), default="")
    show_icon = db.Column(db.Integer,nullable=False)
    tags = db.Column(db.JSON(), nullable=False)
    estado = db.Column(db.Integer,nullable=False)
    usuario_creacion = db.Column(db.String(45), nullable=False, default="")
    fecha_creacion = db.Column(db.DateTime, default=datetime.utcnow)
    usuario_ultima_modificacion = db.Column(db.String(45), default="")
    fecha_ultima_modificacion = db.Column(
        db.DateTime, default="1900-01-01 00:00:00", onupdate=datetime.utcnow)
class MediaSchema(ma.Schema):
    iddef_media = fields.Integer()
    iddef_media_type = fields.Integer(required=True)
    iddef_media_group = fields.Integer(required=True)
    url = fields.String(required=True,validate=validate.Length(max=500))
    name = fields.String(required=True,validate=validate.Length(max=250))
    description = fields.String(required=True,validate=validate.Length(max=250))
    nombre_bucket = fields.String(required=True,validate=validate.Length(max=45))
    bucket_type = fields.Integer()
    etag = fields.String(required=True,validate=validate.Length(max=255))
    show_icon = fields.Integer()
    tags = fields.Dict()
    estado = fields.Integer()
    usuario_creacion = fields.String(validate=validate.Length(max=45))
    fecha_creacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
    usuario_ultima_modificacion = fields.String(required=True, validate=validate.Length(max=45))
    fecha_ultima_modificacion = fields.DateTime("%Y-%m-%d %H:%M:%S")

class MediaSchemaStatus(ma.Schema):
    estado = fields.Integer()
    usuario_creacion = fields.String(validate=validate.Length(max=45))
    fecha_creacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
    usuario_ultima_modificacion = fields.String(required=True, validate=validate.Length(max=45))
    fecha_ultima_modificacion = fields.DateTime("%Y-%m-%d %H:%M:%S")

class GetMediaSchema(ma.Schema):
    iddef_media = fields.Integer(dump_only=True)
    media_type = ma.Pluck("MediaTypeSchema", 'description')
    media_group = ma.Pluck("MediaGroupSchema", 'description')
    #iddef_media_type = fields.Integer()
    #iddef_media_group = fields.Integer()
    url = fields.String(validate=validate.Length(max=500))
    nombre_bucket = fields.String(required=True,validate=validate.Length(max=45))
    bucket_type = fields.Integer()
    etag = fields.String(required=True,validate=validate.Length(max=255))
    name = fields.String(validate=validate.Length(max=250))
    description = fields.String(validate=validate.Length(max=250))
    show_icon = fields.Integer()
    tags = fields.Dict()
    estado = fields.Integer()
    usuario_creacion = fields.String(validate=validate.Length(max=45))
    fecha_creacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
    usuario_ultima_modificacion = fields.String(required=True, validate=validate.Length(max=45))
    fecha_ultima_modificacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
class publicGetListMedia(ma.Schema):
    #iddef_media = fields.Integer(dump_only=True)
    media_type = ma.Pluck("MediaTypeSchema", 'description')
    #media_group = ma.Pluck("MediaGroupSchema", 'description')
    iddef_media_type = fields.Integer()
    #iddef_media_group = fields.Integer()
    url = fields.String(validate=validate.Length(max=500))
    #nombre_bucket = fields.String(required=True,validate=validate.Length(max=45))
    #bucket_type = fields.Integer()
    #etag = fields.String(required=True,validate=validate.Length(max=255))
    name = fields.String(validate=validate.Length(max=250))
    description = fields.String(validate=validate.Length(max=250))
    #show_icon = fields.Integer()
    #tags = fields.Dict()
    #estado = fields.Integer()
class GetListMediaSchema(ma.Schema):
    iddef_media = fields.Integer(dump_only=True)
    iddef_media_type = fields.Integer()
    media_type = ma.Pluck("MediaTypeSchema", 'description')
    media_group = ma.Pluck("MediaGroupSchema", 'description')
    url = fields.String(validate=validate.Length(max=500))
    bucket_type = fields.Integer()
    bucket_type = fields.Integer()
    etag = fields.String(required=True,validate=validate.Length(max=255))
    name = fields.String(validate=validate.Length(max=250))
    description = fields.String(validate=validate.Length(max=250))
    show_icon = fields.Integer()
    tags = fields.Dict()
    estado = fields.Integer()
    usuario_creacion = fields.String(validate=validate.Length(max=45))
    fecha_creacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
    usuario_ultima_modificacion = fields.String(required=True, validate=validate.Length(max=45))
    fecha_ultima_modificacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
class GetListMediaSchemaGallery(ma.Schema):
    rows = fields.Integer()
    total = fields.Integer()
    estado = fields.Integer()
    usuario_creacion = fields.String(validate=validate.Length(max=45))
    fecha_creacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
    usuario_ultima_modificacion = fields.String(required=True, validate=validate.Length(max=45))
    fecha_ultima_modificacion = fields.DateTime("%Y-%m-%d %H:%M:%S")
class UpdateMediaStatusGallery(ma.Schema):
    estado = fields.Integer()
    usuario_ultima_modificacion = fields.String(required=True, validate=validate.Length(max=45))